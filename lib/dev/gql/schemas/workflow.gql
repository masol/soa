type Query {
  # workflow(id: ID): workflow
  workflows: [Workflow]
}

type Mutation {
  updWorkflow(json: String): Boolean
  rmWorkflow(id: ID!): Boolean
  updBehave(wf: ID!, json: String): Boolean
  rmBehave(wf: ID!, id: ID!): Boolean
}

type Workflow {
  id: ID
  name: String
  desc: String
  batch: Boolean #批量工作(例如：同时购买多个商品)．
  info: String #信息名(流程对应的信息)
  appl: String #对角色的应用场合(application)．填入角色名，多个角色以逗号分割．空表示不是一个应用场合．anonymous代表匿名用户.
  behaves: [Behave]
  createdAt: Int
  modifiedAt: Int
}

type Behave {
  id: ID
  name: String #行为名称．
  desc: String #行为简介
  roleInfo: String #执行人信息.
  objInfo: String #宾语信息．
  next: [NextBH] #下一行为列表(FSM事件的定义)
  createdAt: Int
  modifiedAt: Int
}

type NextBH {
  id: ID
  name: String #提交信息($为库信息，例如支付)[包括了提交类型，选择器(更新哪个/些)，留空新建]
  cond: String #结果条件分支(未给出的结果都会保留当前状态不变)
  to: ID #下一行为，如果不给，则为后续行为．
}
